%% generated by soap from: /home/yogesh/Desktop1/sem6/cc/assignments/group-assign/calculator/src/calculator
%% for service "Calculator" and port "CalculatorSoap"
%% using options: [{service,"Calculator"},{port,"CalculatorSoap"},{test_values,true},{generate,both},{namespaces,[{"http://example.com/calculator.xsd","P0"}]},{generate_tests,both},{http_server,soap_server_cowboy_2},{server_name,"calculator_server"},{http_client,soap_client_ibrowse},{client_name,"calculator_client"},{strict,true}]

-module(calculator_server).

-include("calculator.hrl").

-export([add/3]).
-export([subtract/3]).
-export([multiply/3]).
-export([divide/3]).
-export([interface/0]).

-spec add(Parsed_body::'P0:Add'(),
    Soap_req::soap:soap_req(), State::soap:soap_handler_state())
    -> soap:soap_handler_response('P0:AddResponse'()).
add(_Parsed_body, Soap_req, State) ->
    Result = 
        #'P0:AddResponse'{
            'AddResult' = _Parsed_body#'P0:Add'.intA + _Parsed_body#'P0:Add'.intB },
    {ok, Result, Soap_req, State}.

-spec subtract(Parsed_body::'P0:Subtract'(),
    Soap_req::soap:soap_req(), State::soap:soap_handler_state())
    -> soap:soap_handler_response('P0:SubtractResponse'()).
subtract(_Parsed_body, Soap_req, State) ->
    Result = 
        #'P0:SubtractResponse'{
            'SubtractResult' = 42},
    {ok, Result, Soap_req, State}.

-spec multiply(Parsed_body::'P0:Multiply'(),
    Soap_req::soap:soap_req(), State::soap:soap_handler_state())
    -> soap:soap_handler_response('P0:MultiplyResponse'()).
multiply(_Parsed_body, Soap_req, State) ->
    Result = 
        #'P0:MultiplyResponse'{
            'MultiplyResult' = 42},
    {ok, Result, Soap_req, State}.

-spec divide(Parsed_body::'P0:Divide'(),
    Soap_req::soap:soap_req(), State::soap:soap_handler_state())
    -> soap:soap_handler_response('P0:DivideResponse'()).
divide(_Parsed_body, Soap_req, State) ->
    Result = 
        #'P0:DivideResponse'{
            'DivideResult' = 42},
    {ok, Result, Soap_req, State}.

%% The 'interface()' function is used by the SOAP framework to access information about
%% the WSDL.
interface() ->
    ?INTERFACE.
